<div class="container mt-4">
    <h2 class="text-center mb-4">Design Management</h2>
    <div class="row" id="design-container">
        <% designs.forEach(design => { %>
            <div class="col-md-4 mb-4" id="design-<%= design._id %>">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">
                            <%= design.title %>
                        </h5>
                        <p class="card-text">
                            <%= design.description %>
                        </p>
                        <p><strong>Price:</strong> $
                            <%= design.price %>
                        </p>
                        <p><strong>Category:</strong>
                            <%= design.category %>
                        </p>

                        <p><strong>Designer ID:</strong>
                            <%= design.designerId %>
                        </p>
                        <p><strong>Designer Email:</strong>
                            <%= design.designerEmail %>
                        </p>
                        <p><strong>Purchased:</strong>
                            <%= design.purchase ? 'Yes' : 'No' %>
                        </p>
                        <p><strong>Created At:</strong>
                            <%= design.createdAt.toLocaleString() %>
                        </p>

                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editDesignModal" data-id="<%= design._id %>" data-title="<%= design.title %>" data-description="<%= design.description %>" data-price="<%= design.price %>" data-category="<%= design.category %>"
                            data-designer-id="<%= design.designerId %>" data-designer-email="<%= design.designerEmail %>" data-purchase="<%= design.purchase %>" data-created-at="<%= design.createdAt %>">
                        Edit
                    </button>
                        <button type="button" class="btn btn-danger" onclick="deleteDesign('<%= design._id %>')">
                        Delete
                    </button>
                    </div>
                </div>
            </div>
            <% }) %>
    </div>

</div>

<div class="modal fade" id="editDesignModal" tabindex="-1" aria-labelledby="editDesignModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editDesignModalLabel">Edit Design</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editDesignForm">
                    <input type="hidden" id="designId">

                    <div class="mb-3">
                        <label for="designerId" class="form-label">Designer ID</label>
                        <input type="text" class="form-control" id="designerId" required>
                    </div>

                    <div class="mb-3">
                        <label for="designerEmail" class="form-label">Designer Email</label>
                        <input type="email" class="form-control" id="designerEmail" required>
                    </div>

                    <div class="mb-3">
                        <label for="title" class="form-label">Title</label>
                        <input type="text" class="form-control" id="title" required>
                    </div>

                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control" id="description" rows="3"></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="price" class="form-label">Price</label>
                        <input type="number" class="form-control" id="price" required>
                    </div>

                    <div class="mb-3">
                        <label for="category" class="form-label">Category</label>
                        <input type="text" class="form-control" id="category" required>
                    </div>

                    <div class="mb-3">
                        <label for="purchase" class="form-label">Purchased</label>
                        <select class="form-control" id="purchase" required>
                            <option value="false">No</option>
                            <option value="true">Yes</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="createdAt" class="form-label">Created At</label>
                        <input type="datetime-local" class="form-control" id="createdAt" required>
                    </div>

                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    const editDesignModal = document.getElementById('editDesignModal');
    editDesignModal.addEventListener('show.bs.modal', function(event) {
        const button = event.relatedTarget;

        const designId = button.getAttribute('data-id');
        const designerId = button.getAttribute('data-designer-id');
        const designerEmail = button.getAttribute('data-designer-email');
        const title = button.getAttribute('data-title');
        const description = button.getAttribute('data-description');
        const price = button.getAttribute('data-price');
        const category = button.getAttribute('data-category');
        const purchase = button.getAttribute('data-purchase');
        const createdAt = button.getAttribute('data-created-at');

        document.getElementById('designId').value = designId;
        document.getElementById('designerId').value = designerId;
        document.getElementById('designerEmail').value = designerEmail;
        document.getElementById('title').value = title;
        document.getElementById('description').value = description;
        document.getElementById('price').value = price;
        document.getElementById('category').value = category;
        document.getElementById('purchase').value = purchase;

        if (createdAt) {
            document.getElementById('createdAt').value = new Date(createdAt).toISOString().slice(0, 16);
        }
    });

    document.getElementById('editDesignForm').addEventListener('submit', function(event) {
        event.preventDefault();

        const designId = document.getElementById('designId').value;
        const designerId = document.getElementById('designerId').value;
        const designerEmail = document.getElementById('designerEmail').value;
        const title = document.getElementById('title').value;
        const description = document.getElementById('description').value;
        const price = document.getElementById('price').value;
        const category = document.getElementById('category').value;
        const purchase = document.getElementById('purchase').value === "true"; 
        const createdAt = document.getElementById('createdAt').value;

        fetch(`/admin/designs/${designId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    designerId,
                    designerEmail,
                    title,
                    description,
                    price,
                    category,
                    purchase,
                    createdAt
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.message === 'Design updated successfully') {
                    alert('Design updated successfully');
                    window.location.reload();
                } else {
                    alert('Error updating design');
                }
            })
            .catch(err => console.error(err));
    });


    function deleteDesign(designId) {
        if (confirm('Are you sure you want to delete this design?')) {
            fetch(`http://localhost:5000/admin/designs/${designId}`, {
                    method: 'DELETE',
                })
                .then(response => response.json())
                .then(data => {
                    if (data.message === 'Design deleted successfully') {
                        alert('Design deleted successfully');
                        document.getElementById(`design-${designId}`).remove();
                    } else {
                        alert('Error deleting design');
                    }
                })
                .catch(err => console.error(err));
        }
    }
</script>