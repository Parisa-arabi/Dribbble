<div class="container mt-4">
    <h2>Designers List</h2>
    <!-- Button to open create designer modal -->
    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createDesignerModal">
        Create Designer
    </button>
    <table class="table table-bordered mt-3">
        <thead>
            <tr>
                <th>#</th>
                <th>Name</th>
                <th>Email</th>
                <th>Password</th>

                <th>Title</th>
                <th>Income</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <% designers.forEach((designer, index) => { %>
                <tr>
                    <td>
                        <%= index + 1 %>
                    </td>
                    <td>
                        <%= designer.name %>
                    </td>
                    <td>
                        <%= designer.email %>
                    </td>
                    <td>
                        <%= designer.password %>
                    </td>

                    <td>
                        <%= designer.title %>
                    </td>
                    <td>$
                        <%= designer.income %>
                    </td>
                    <td>
                        <!-- Edit Button -->
                        <button class="btn btn-warning btn-sm edit-btn" data-bs-toggle="modal" data-bs-target="#editDesignerModal" data-id="<%= designer._id %>" data-name="<%= designer.name %>" data-email="<%= designer.email %>" data-password="<%= designer.password %>" data-title="<%= designer.title %>"
                            data-income="<%= designer.income %>">
                        Edit
                    </button>

                        <!-- Delete Button -->
                        <button class="btn btn-danger btn-sm delete-btn" data-id="<%= designer._id %>">
                        Delete
                    </button>
                    </td>
                </tr>
                <% }) %>
        </tbody>
    </table>
</div>

<!-- Create Designer Modal -->
<div class="modal fade" id="createDesignerModal" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create Designer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createDesignerForm">
                    <div class="mb-3">
                        <label class="form-label">Name</label>
                        <input type="text" class="form-control" id="name" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-control" id="email" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Password</label>
                        <input type="password" class="form-control" id="password" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Title</label>
                        <input type="text" class="form-control" id="title" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Income</label>
                        <input type="number" class="form-control" id="income">
                    </div>
                    <button type="submit" class="btn btn-success">Create Designer</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Designer Modal -->
<div class="modal fade" id="editDesignerModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Designer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editDesignerForm">
                    <input type="hidden" id="editDesignerId">
                    <!-- Hidden ID field -->
                    <div class="mb-3">
                        <label class="form-label">Name</label>
                        <input type="text" class="form-control" id="editName" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-control" id="editEmail" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Password</label>
                        <input type="text" class="form-control" id="editPassword" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Title</label>
                        <input type="text" class="form-control" id="editTitle" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Income</label>
                        <input type="number" class="form-control" id="editIncome">
                    </div>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    // Create Designer
    document.getElementById("createDesignerForm").addEventListener("submit", async function(event) {
        event.preventDefault();

        const formData = {
            name: document.getElementById("name").value,
            email: document.getElementById("email").value,
            password: document.getElementById("password").value,
            title: document.getElementById("title").value,
            income: document.getElementById("income").value || 0
        };

        try {
            const response = await fetch("http://localhost:5000/admin/designers", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(formData)
            });

            if (response.ok) {
                alert("Designer created successfully!");
                location.reload();
            } else {
                alert("Error creating designer");
            }
        } catch (error) {
            console.error("Error:", error);
        }
    });

    // Open Edit Modal & Fill Fields
    document.querySelectorAll(".edit-btn").forEach(button => {
        button.addEventListener("click", function() {
            document.getElementById("editDesignerId").value = this.dataset.id;
            document.getElementById("editName").value = this.dataset.name;
            document.getElementById("editEmail").value = this.dataset.email;
            document.getElementById("editPassword").value = this.dataset.password;
            document.getElementById("editTitle").value = this.dataset.title;
            document.getElementById("editIncome").value = this.dataset.income;
        });
    });

    // Save Edited Designer
    document.getElementById("editDesignerForm").addEventListener("submit", async function(event) {
        event.preventDefault();

        const designerId = document.getElementById("editDesignerId").value;
        const updatedData = {
            name: document.getElementById("editName").value,
            email: document.getElementById("editEmail").value,
            password: document.getElementById("editPassword").value,

            title: document.getElementById("editTitle").value,
            income: document.getElementById("editIncome").value
        };

        try {
            const response = await fetch(`http://localhost:5000/admin/designers/${designerId}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(updatedData)
            });

            if (response.ok) {
                alert("Designer updated successfully!");
                location.reload();
            } else {
                alert("Error updating designer");
            }
        } catch (error) {
            console.error("Error:", error);
        }
    });

    // Delete Designer
    document.querySelectorAll(".delete-btn").forEach(button => {
        button.addEventListener("click", async function() {
            const designerId = this.dataset.id;

            if (confirm("Are you sure you want to delete this designer?")) {
                try {
                    const response = await fetch(`http://localhost:5000/admin/designers/${designerId}`, {
                        method: "DELETE"
                    });

                    if (response.ok) {
                        alert("Designer deleted successfully!");
                        location.reload();
                    } else {
                        alert("Error deleting designer");
                    }
                } catch (error) {
                    console.error("Error:", error);
                }
            }
        });
    });
</script>