<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>
    <div class="container mt-5">
        <div class="card">
            <div class="card-header">
                <h3>User Profile</h3>
            </div>
            <div class="card-body">
                <h5 class="card-title">Email: <span class="text-muted" id="email"></span></h5>

                <h5 class="mt-4">Account Balance</h5>
                <p id="account-balance"></p>

                <button class="btn btn-primary" id="update-balance-btn">Update Balance</button>

                <div id="balance-input" class="mt-3" style="display: none;">
                    <label for="new-balance">Enter New Balance (USD):</label>
                    <input type="number" id="new-balance" class="form-control" />
                    <button class="btn btn-success mt-2" id="save-balance-btn">Save</button>
                </div>

                <h5 class="mt-4">Purchases List</h5>
                <ul class="list-group" id="purchases-list"></ul>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        fetch('http://localhost:5000/buyer/info', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            },
            credentials: 'include'
        })
            .then(response => response.json())
            .then(data => {
                if (data.user) {
                    console.log("User Info:", data.user);

                    document.getElementById('email').innerHTML = data.user.Email;
                    document.getElementById('account-balance').innerHTML = data.user.AccountBalance + " USD";

                    const purchasesListElement = document.getElementById('purchases-list');
                    data.user.PurchasesList.forEach(purchase => {
                        const purchaseCard = document.createElement('div');
                        purchaseCard.classList.add('card', 'mb-3'); 

                        const purchaseCardBody = document.createElement('div');
                        purchaseCardBody.classList.add('card-body');

                        
                        const titleElement = document.createElement('h5');
                        titleElement.classList.add('card-title');
                        titleElement.innerHTML = `<strong>${purchase.Title}</strong>`;
                        purchaseCardBody.appendChild(titleElement);

                        const descriptionElement = document.createElement('p');
                        descriptionElement.classList.add('card-text');
                        descriptionElement.innerHTML = `<strong>Description:</strong> ${purchase.Description}`;
                        purchaseCardBody.appendChild(descriptionElement);

                        const priceElement = document.createElement('p');
                        priceElement.classList.add('card-text');
                        priceElement.innerHTML = `<strong>Price:</strong> ${purchase.Price} USD`;
                        purchaseCardBody.appendChild(priceElement);

                        const categoryElement = document.createElement('p');
                        categoryElement.classList.add('card-text');
                        categoryElement.innerHTML = `<strong>Category:</strong> ${purchase.Category}`;
                        purchaseCardBody.appendChild(categoryElement);

                        const releaseDateElement = document.createElement('p');
                        releaseDateElement.classList.add('card-text');
                        releaseDateElement.innerHTML = `<strong>Release Date:</strong> ${new Date(purchase.ReleaseDate).toLocaleDateString()}`;
                        purchaseCardBody.appendChild(releaseDateElement);

                        const designerEmailElement = document.createElement('p');
                        designerEmailElement.classList.add('card-text');
                        designerEmailElement.innerHTML = `<strong>Designer Email:</strong> ${purchase.DesignerEmail}`;
                        purchaseCardBody.appendChild(designerEmailElement);

                        purchaseCard.appendChild(purchaseCardBody);

                        purchasesListElement.appendChild(purchaseCard);
                    });
                } else {
                    console.log(data.message);
                }
            })
            .catch(error => console.error("Error:", error));

        document.getElementById('update-balance-btn').addEventListener('click', function () {
            document.getElementById('balance-input').style.display = 'block';
        });

        document.getElementById('save-balance-btn').addEventListener('click', function () {
            const newBalance = document.getElementById('new-balance').value;

            if (newBalance && !isNaN(newBalance) && newBalance >= 0) {
                fetch('http://localhost:5000/buyer/add-balance', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    credentials: 'include',
                    body: JSON.stringify({
                        newBalance: parseFloat(newBalance) 
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert('Balance updated successfully!');
                            document.getElementById('account-balance').innerHTML = newBalance + " USD";
                            document.getElementById('balance-input').style.display = 'none';
                            location.reload()
                        } else {
                            alert('Failed to update balance: ' + data.message);
                        }
                    })
                    .catch(error => console.error("Error:", error));
            } else {
                alert('Please enter a valid number.');
            }
        });
    </script>
</body>

</html>